knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(geosphere)
library(readr)
library(janitor)
library(data.table)
library(tidyr)
library(scales)
daily_activity <- read.csv("../fitbase_data/dailyActivity_merged.csv")
daily_calories <- read.csv("../fitbase_data/dailyCalories_merged.csv")
daily_intensities <- read.csv("../fitbase_data/dailyIntensities_merged.csv")
daily_steps <- read.csv("../fitbase_data/dailySteps_merged.csv")
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
hourly_calories <- read.csv("../fitbase_data/hourlyCalories_merged.csv")
hourly_intensities <- read.csv("../fitbase_data/hourlyIntensities_merged.csv")
hourly_steps <- read.csv("../fitbase_data/hourlySteps_merged.csv")
minute_calories_narrow <- read.csv("../fitbase_data/minuteCaloriesNarrow_merged.csv")
minute_calories_wide <- read.csv("../fitbase_data/minuteCaloriesWide_merged.csv")
minute_intensities_narrow <- read.csv("../fitbase_data/minuteIntensitiesNarrow_merged.csv")
minute_intensities_wide <- read.csv("../fitbase_data/minuteIntensitiesWide_merged.csv")
minute_METs_narrow <- read.csv("../fitbase_data/minuteMETsNarrow_merged.csv")
minute_sleep <- read.csv("../fitbase_data/minuteSleep_merged.csv")
minute_steps_narrow <- read.csv("../fitbase_data/minuteStepsNarrow_merged.csv")
minute_steps_wide <- read.csv("../fitbase_data/minuteStepsWide_merged.csv")
sleep_day <- read.csv("../fitbase_data/sleepDay_merged.csv")
weight_log_info <- read.csv("../fitbase_data/weightLogInfo_merged.csv")
daily_activity <- daily_activity %>% mutate(ActivityDate = as.Date(ActivityDate, "%m/%d/%Y"))
daily_calories <- daily_calories %>% mutate(ActivityDay = as.Date(ActivityDay, "%m/%d/%Y"))
daily_intensities <- daily_intensities %>% mutate(ActivityDay = as.Date(ActivityDay, "%m/%d/%Y"))
daily_steps <- daily_steps %>% mutate(ActivityDay = as.Date(ActivityDay, "%m/%d/%Y"))
str(daily_activity)
heartrate_seconds$day <- format(as.Date(heartrate_seconds$Time),'%a')
heartrate_seconds[['Time']] <- ymd_hms(heartrate_seconds[['Time']])
heartrate_seconds <- heartrate_seconds %>% as.POSIXct(Time,format="%m/%d/%Y %H:%M:%S",tz=Sys.timezone())
str(heartrate_seconds)
str(hourly_calories)
str(hourly_intensities)
str(hourly_steps)
heartrate_seconds[['Time']] <- heartrate_seconds %>% as.POSIXct(Time,format="%m/%d/%Y %H:%M:%S",tz=Sys.timezone())
heartrate_seconds[['Time']] <- heartrate_seconds %>% as.POSIXct(Time,format="%m-/%d-/%Y %H:%M:%S",tz=Sys.timezone())'
heartrate_seconds[['Time']] <- heartrate_seconds %>% as.POSIXct(Time,format="%m-/%d-/%Y %H:%M:%S",tz=Sys.timezone())
heartrate_seconds <- heartrate_seconds %>% as.POSIXct(Time,format="%m-/%d-/%Y %H:%M:%S",tz=Sys.timezone())
heartrate_seconds <- heartrate_seconds %>% as.POSIXct(Time,format="%m-/%d-/%Y %H:%M:%S",tz=Sys.timezone())
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
str(heartrate_seconds)
heartrate_seconds <- heartrate_seconds %>% as.POSIXct(Time,format="%m-/%d-/%Y %H:%M:%S",tz=Sys.timezone())
str(heartrate_seconds)
heartrate_seconds[['Time']]  <-  as.POSIXct(heartrate_seconds[['Time']],format="%m-/%d-/%Y %H:%M:%S",tz=Sys.timezone())
str(heartrate_seconds)
head(heartrate_seconds)
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
head(heartrate_seconds)
heartrate_seconds[['Time']]  <-  as.POSIXct(heartrate_seconds[['Time']],format = "%Y-%m-%d %H:%M:%S")
head(heartrate_seconds)
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
gc()
head(daily_activity)
head(heartrate_seconds)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(geosphere)
library(readr)
library(janitor)
library(data.table)
library(tidyr)
library(scales)
daily_activity <- read.csv("../fitbase_data/dailyActivity_merged.csv")
daily_calories <- read.csv("../fitbase_data/dailyCalories_merged.csv")
daily_intensities <- read.csv("../fitbase_data/dailyIntensities_merged.csv")
daily_steps <- read.csv("../fitbase_data/dailySteps_merged.csv")
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
hourly_calories <- read.csv("../fitbase_data/hourlyCalories_merged.csv")
hourly_intensities <- read.csv("../fitbase_data/hourlyIntensities_merged.csv")
hourly_steps <- read.csv("../fitbase_data/hourlySteps_merged.csv")
minute_calories_narrow <- read.csv("../fitbase_data/minuteCaloriesNarrow_merged.csv")
minute_calories_wide <- read.csv("../fitbase_data/minuteCaloriesWide_merged.csv")
minute_intensities_narrow <- read.csv("../fitbase_data/minuteIntensitiesNarrow_merged.csv")
minute_intensities_wide <- read.csv("../fitbase_data/minuteIntensitiesWide_merged.csv")
minute_METs_narrow <- read.csv("../fitbase_data/minuteMETsNarrow_merged.csv")
minute_sleep <- read.csv("../fitbase_data/minuteSleep_merged.csv")
minute_steps_narrow <- read.csv("../fitbase_data/minuteStepsNarrow_merged.csv")
minute_steps_wide <- read.csv("../fitbase_data/minuteStepsWide_merged.csv")
sleep_day <- read.csv("../fitbase_data/sleepDay_merged.csv")
weight_log_info <- read.csv("../fitbase_data/weightLogInfo_merged.csv")
str(daily_activity)
str(daily_calories)
str(daily_intensities)
str(daily_steps)
str(heartrate_seconds)
str(hourly_calories)
str(hourly_intensities)
str(hourly_steps)
str(minute_calories_narrow)
str(minute_calories_wide)
str(minute_intensities_narrow)
str(minute_intensities_wide)
str(minute_METs_narrow)
str(minute_sleep)
str(minute_steps_narrow)
str(minute_steps_wide)
str(sleep_day)
str(weight_log_info)
head(daily_activity)
head(heartrate_seconds)
daily_activity <- daily_activity %>% mutate(ActivityDate = as.Date(ActivityDate, "%m/%d/%Y"))
daily_calories <- daily_calories %>% mutate(ActivityDay = as.Date(ActivityDay, "%m/%d/%Y"))
daily_intensities <- daily_intensities %>% mutate(ActivityDay = as.Date(ActivityDay, "%m/%d/%Y"))
daily_steps <- daily_steps %>% mutate(ActivityDay = as.Date(ActivityDay, "%m/%d/%Y"))
heartrate_seconds <- heartrate_seconds %>% as.POSIXct(Time,format="%m-/%d-/%Y %H:%M:%S",tz=Sys.timezone())
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
str(heartrate_seconds)
heartrate_seconds[['Time']] <- strsplit(heartrate_seconds[['Time']], split = " ")
str(heartrate_seconds)
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
str(heartrate_seconds)
heartrate_seconds[['Day']] <- strsplit(heartrate_seconds[['Time']], split = " ")
str(heartrate_seconds)
heartrate_seconds$day <- format(as.Date(heartrate_seconds$Time),'%m %d %y')
str(heartrate_seconds)
heartrate_seconds$Day <- format(as.Date(heartrate_seconds$Time),'%m %d %Y')
str(heartrate_seconds)
heartrate_seconds$Day <- format(as.Date(heartrate_seconds$Time),'%m-%d-%Y')
#column for month when the trip started
heartrate_seconds$newTime <- format(as.Date(heartrate_seconds$Time),'HH:MM')
str(heartrate_seconds)
heartrate_seconds$newTime <- format(as.Date(heartrate_seconds$Time),'hh:mm')
str(heartrate_seconds)
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
knitr::opts_chunk$set(echo = TRUE)
str(heartrate_seconds)
ggplot(data=daily_activity, aes(x=TotalSteps, y=SedentaryMinutes, color = Calories)) + geom_point()
gc()
library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(geosphere)
library(readr)
library(janitor)
library(data.table)
library(tidyr)
library(scales)
daily_activity <- read.csv("../fitbase_data/dailyActivity_merged.csv")
daily_calories <- read.csv("../fitbase_data/dailyCalories_merged.csv")
daily_intensities <- read.csv("../fitbase_data/dailyIntensities_merged.csv")
daily_steps <- read.csv("../fitbase_data/dailySteps_merged.csv")
heartrate_seconds <- read.csv("../fitbase_data/heartrate_seconds_merged.csv")
hourly_calories <- read.csv("../fitbase_data/hourlyCalories_merged.csv")
hourly_intensities <- read.csv("../fitbase_data/hourlyIntensities_merged.csv")
hourly_steps <- read.csv("../fitbase_data/hourlySteps_merged.csv")
minute_calories_narrow <- read.csv("../fitbase_data/minuteCaloriesNarrow_merged.csv")
minute_calories_wide <- read.csv("../fitbase_data/minuteCaloriesWide_merged.csv")
minute_intensities_narrow <- read.csv("../fitbase_data/minuteIntensitiesNarrow_merged.csv")
minute_intensities_wide <- read.csv("../fitbase_data/minuteIntensitiesWide_merged.csv")
minute_METs_narrow <- read.csv("../fitbase_data/minuteMETsNarrow_merged.csv")
minute_sleep <- read.csv("../fitbase_data/minuteSleep_merged.csv")
minute_steps_narrow <- read.csv("../fitbase_data/minuteStepsNarrow_merged.csv")
minute_steps_wide <- read.csv("../fitbase_data/minuteStepsWide_merged.csv")
sleep_day <- read.csv("../fitbase_data/sleepDay_merged.csv")
weight_log_info <- read.csv("../fitbase_data/weightLogInfo_merged.csv")
ggplot(data=daily_activity, aes(x=TotalSteps, y=SedentaryMinutes, color = Calories)) + geom_point()
str(daily_activity)
str(daily_calories)
str(daily_intensities)
str(daily_steps)
str(heartrate_seconds)
str(hourly_calories)
str(hourly_intensities)
str(hourly_steps)
str(minute_calories_narrow)
str(minute_calories_wide)
str(minute_intensities_narrow)
str(minute_intensities_wide)
str(minute_METs_narrow)
str(minute_sleep)
str(minute_steps_narrow)
str(minute_steps_wide)
str(sleep_day)
str(weight_log_info)
head(daily_activity)
head(daily_calories)
head(daily_intensities)
head(daily_steps)
head(heartrate_seconds)
head(hourly_calories)
head(hourly_intensities)
head(hourly_steps)
head(minute_calories_narrow)
head(minute_calories_wide)
head(minute_intensities_narrow)
head(minute_intensities_wide)
head(minute_METs_narrow)
head(minute_sleep)
head(minute_steps_narrow)
head(minute_steps_wide)
head(sleep_day)
head(weight_log_info)
ggplot(data=daily_activity, aes(x=TotalSteps, y=SedentaryMinutes, color = Calories)) + geom_point() + geom_smooth()
ggplot(data=daily_activity, aes(x=TotalSteps, y=SedentaryMinutes, color = Calories)) + geom_point() + geom_smooth() + lab(title = "Total Steps Vs Sedentary minutes ", subtitle ="This plot is based on the value from Daily Activity Dataset", x = "Total Steps", y="Sedentary Minutes")
ggplot(data=daily_activity, aes(x=TotalSteps, y=SedentaryMinutes, color = Calories)) + geom_point() + geom_smooth() + geom_label(title = "Total Steps Vs Sedentary minutes ", subtitle ="This plot is based on the value from Daily Activity Dataset", x = "Total Steps", y="Sedentary Minutes")
ggplot(data=daily_activity, aes(x=TotalSteps, y=SedentaryMinutes, color = Calories)) + geom_point() + geom_smooth() + labs(title = "Total Steps Vs Sedentary minutes ", subtitle ="This plot is based on the value from Daily Activity Dataset", x = "Total Steps", y="Sedentary Minutes")
ggplot(data=daily_activity, aes(x=TotalSteps, y = Calories))+ geom_point() + stat_smooth(method=lm) +labs(title = "Total Steps Vs Calories ", subtitle ="This plot is based on the value from Daily Activity Dataset", x = "Total Steps", y="Calories")
ggplot(data=daily_activity, aes(x=TotalSteps, y = Calories, alpha()))+ geom_point() + stat_smooth(method=lm) +labs(title = "Total Steps Vs Calories ", subtitle ="This plot is based on the value from Daily Activity Dataset", x = "Total Steps", y="Calories")
ggplot(data=daily_activity, aes(x=TotalSteps, y = Calories, ))+ geom_point() + stat_smooth(method=lm) +labs(title = "Total Steps Vs Calories ", subtitle ="This plot is based on the value from Daily Activity Dataset", x = "Total Steps", y="Calories")
calories.lm <- lm(Calories ~ TotalSteps, data = daily_activity)
calories.res <- resid(calories.lm)
plot(daily_activity$TotalSteps, calories.res, ylab="Residuals",
xlab = "Total Steps", main = "Calories Burned")
abline(0,0)
plot(density(calories.res))
#Checking for normality
qqnorm(calories.res)
qqline(calories.res)
ggplot(data=sleep_day, aes(x=TotalMinutesAsleep, y=TotalTimeInBed)) + geom_point()
ggplot(data=sleep_day, aes(x=TotalMinutesAsleep, y=TotalTimeInBed)) + geom_point()+ stat_smooth(method=lm) +labs(title = "Relation between sleep and time in bed ", subtitle ="This plot is based on the value from Sleep Day Dataset", x = "Total Minute Sleep", y="Total Minute in Bed")
dailyCalories <- subset(dailyCalories_merged,Calories>500)
dailyCalories <- subset(daily_calories,Calories>500)
days_active <- dailyCalories %>%
group_by(Id) %>%
summarise(is_active = sum(Calories >2400), days_recorded = sum(Calories>0))
days_active <- subset(days_active,days_recorded > 15)
kable(days_active)
dailyCalories <- subset(daily_calories,Calories>500)
days_active <- dailyCalories %>%
group_by(Id) %>%
summarise(is_active = sum(Calories >2400), days_recorded = sum(Calories>0))
days_active <- subset(days_active,days_recorded > 15)
print(days_active)
dailyCalories <- subset(daily_calories,Calories>500)
days_active <- dailyCalories %>%
group_by(Id) %>%
summarise(is_active = sum(Calories >2400), days_recorded = sum(Calories>0))
days_active <- subset(days_active,days_recorded > 15)
head(days_active)
hourlyCalories <- hourly_calories
hourlyCalories$ActivityHour <- mdy_hms(hourlyCalories$ActivityHour)
hourlyCalories$date <- date(hourlyCalories$ActivityHour)
hourlyCalories$hour <- hour(hourlyCalories$ActivityHour)
hourlyCalories$activity <- ifelse(hourlyCalories$Calories < 80, "sleep",
ifelse ( (hourlyCalories$Calories >=80 & hourlyCalories$Calories < 150), "normal",
ifelse ((hourlyCalories$Calories >=150 & hourlyCalories$Calories < 400), "moderate_exercise", "intense_exercise")))
usage <- count(hourlyCalories, vars= hour)
activity <- hourlyCalories %>%
group_by(hour) %>%
summarise(count_sleep = sum(activity == "sleep"), count_normal = sum(activity == "normal"), count_moderate_exercise = sum(activity == "moderate_exercise"), count_intense_exercise = sum(activity=="intense_exercise"))
activity_sorted_long <-
activity %>%
gather(c("count_normal","count_moderate_exercise","count_intense_exercise"),key="Activity",value="Count")
ggplot(data = activity_sorted_long, aes (x = hour, y = Count, colour = Activity)) +
geom_line()
ggplot(data = activity_sorted_long, aes (x = hour, y = Count, colour = Activity)) +
geom_line()+labs(title = "How Average User Spend their Day ", subtitle =" Going on the average calories spent per hour depending on activities", x = "Hour", y="Count")
ggplot(data = dailyCalories, aes (x = ActivityDay, y = Calories, colour = (factor(Id)), group = 33)) +
theme(axis.text.x=element_blank()) +
geom_point() + geom_smooth()
ggplot(data = dailyCalories, aes (x = ActivityDay, y = Calories, colour = (factor(Id)), group = 33)) +
theme(axis.text.x=element_blank()) +
geom_point() + geom_smooth() + labs(title = "Changing habits of user over the course of smart device usage ", subtitle ="We do this by tracking their daily calories usage and observing whether they change over time ", x = "Acitivity Day", y="Calories")
ggplot(data = dailyCalories, aes (x = ActivityDay, y = Calories, colour = (factor(Id)), group = 33)) +
theme(axis.text.x=element_blank()) +
geom_point() + geom_smooth() + labs(title = "Changing habits of user over the course of smart device usage ", subtitle ="This plot is based on Daily Calories dataset ", x = "Acitivity Day", y="Calories")
ggplot(data=daily_steps, aes(x=weekday_of_week, y=StepTotal)) + geom_point()
ggplot(data=daily_activity, aes(x=TotalSteps, y = Calories, ))+ geom_point() + stat_smooth(method=lm) +labs(title = "Total Steps Vs Calories ", subtitle ="This plot is based on the value from Daily Activity Dataset", x = "Total Steps", y="Calories")
calories.lm <- lm(Calories ~ TotalSteps, data = daily_activity)
calories.res <- resid(calories.lm)
plot(daily_activity$TotalSteps, calories.res, ylab="Residuals",
xlab = "Total Steps", main = "Calories Burned")
abline(0,0)
plot(density(calories.res))
#Checking for normality
qqnorm(calories.res)
qqline(calories.res)
ggplot(data=sleep_day, aes(x=TotalMinutesAsleep, y=TotalTimeInBed)) + geom_point()+ stat_smooth(method=lm) +labs(title = "Relation between sleep and time in bed ", subtitle ="This plot is based on the value from Sleep Day Dataset", x = "Total Minute Sleep", y="Total Minute in Bed")
ggplot(data= daily_activity_sleep) +
geom_boxplot(mapping= aes(x=distance_categories, y= calories, fill= distance_categories))
hourlyCalories <- hourly_calories
hourlyCalories$ActivityHour <- mdy_hms(hourlyCalories$ActivityHour)
hourlyCalories$date <- date(hourlyCalories$ActivityHour)
hourlyCalories$hour <- hour(hourlyCalories$ActivityHour)
hourlyCalories$activity <- ifelse(hourlyCalories$Calories < 80, "sleep",
ifelse ( (hourlyCalories$Calories >=80 & hourlyCalories$Calories < 150), "normal",
ifelse ((hourlyCalories$Calories >=150 & hourlyCalories$Calories < 400), "moderate_exercise", "intense_exercise")))
usage <- count(hourlyCalories, vars= hour)
activity <- hourlyCalories %>%
group_by(hour) %>%
summarise(count_sleep = sum(activity == "sleep"), count_normal = sum(activity == "normal"), count_moderate_exercise = sum(activity == "moderate_exercise"), count_intense_exercise = sum(activity=="intense_exercise"))
activity_sorted_long <-
activity %>%
gather(c("count_normal","count_moderate_exercise","count_intense_exercise"),key="Activity",value="Count")
ggplot(data = activity_sorted_long, aes (x = hour, y = Count, colour = Activity)) +
geom_line()+labs(title = "How Average User Spend their Day ", subtitle =" Going on the average calories spent per hour depending on activities", x = "Hour", y="Count")
ggplot(data = dailyCalories, aes (x = ActivityDay, y = Calories, colour = (factor(Id)), group = 33)) +
theme(axis.text.x=element_blank()) +
geom_point() + geom_smooth() + labs(title = "Changing habits of user over the course of smart device usage ", subtitle ="This plot is based on Daily Calories dataset ", x = "Acitivity Day", y="Calories")
ggplot(data=weight_log_info, aes(x=WeightKg, y=BMI)) + geom_line()
ggplot(data=weight_log_info, aes(x=WeightKg, y=BMI)) + geom_line() + labs(title = "Weight VS BMI ", subtitle ="This plot is based on Weigh Log Info Dataset", x = "Weight (Kg)", y="BMI")
hourlyCalories <- hourly_calories
hourlyCalories$ActivityHour <- mdy_hms(hourlyCalories$ActivityHour)
hourlyCalories$date <- date(hourlyCalories$ActivityHour)
hourlyCalories$hour <- hour(hourlyCalories$ActivityHour)
hourlyCalories$activity <- ifelse(hourlyCalories$Calories < 80, "sleep",
ifelse ( (hourlyCalories$Calories >=80 & hourlyCalories$Calories < 150), "normal",
ifelse ((hourlyCalories$Calories >=150 & hourlyCalories$Calories < 400), "moderate_exercise", "intense_exercise")))
usage <- count(hourlyCalories, vars= hour)
activity <- hourlyCalories %>%
group_by(hour) %>%
summarise(count_sleep = sum(activity == "sleep"), count_normal = sum(activity == "normal"), count_moderate_exercise = sum(activity == "moderate_exercise"), count_intense_exercise = sum(activity=="intense_exercise"))
activity_sorted_long <-
activity %>%
gather(c("count_normal","count_moderate_exercise","count_intense_exercise"),key="Activity",value="Count")
ggplot(data = activity_sorted_long, aes (x = hour, y = Count, colour = Activity)) +
geom_line()+labs(title = "How Average User Spend their Day ", subtitle =" Going on the average calories spent per hour depending on activities", x = "Hour", y="Count")
ggplot(data = dailyCalories, aes (x = ActivityDay, y = Calories, colour = (factor(Id)), group = 33)) +
theme(axis.text.x=element_blank()) +
geom_point() + geom_smooth() + labs(title = "Changing habits of user over the course of smart device usage ", subtitle ="This plot is based on Daily Calories dataset ", x = "Acitivity Day", y="Calories")
